"use strict";(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[8789],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(87462),r=n(67294),o=n(86010),s=n(12466),l=n(16550),i=n(91980),p=n(67392),c=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,p]=h({queryString:n,groupId:a}),[u,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=i??u;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),k(e)}),[p,k,o]),tabValues:o}}var f=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==l&&(u(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},s,{className:(0,o.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=k(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function v(e){const t=(0,f.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},31817:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),o=n(74866),s=n(85162);const l={sidebar_label:"Fungible Token Drop"},i="Fungible Token Drop",p={unversionedId:"Tutorials/Basics/ft-drops",id:"version-2.0/Tutorials/Basics/ft-drops",title:"Fungible Token Drop",description:"Introduction",source:"@site/versioned_docs/version-2.0/Tutorials/Basics/ft-drops.md",sourceDirName:"Tutorials/Basics",slug:"/Tutorials/Basics/ft-drops",permalink:"/docs/2.0/Tutorials/Basics/ft-drops",draft:!1,editUrl:"https://github.com/keypom/keypom-docs/tree/main/versioned_docs/version-2.0/Tutorials/Basics/ft-drops.md",tags:[],version:"2.0",frontMatter:{sidebar_label:"Fungible Token Drop"},sidebar:"Tutorials",previous:{title:"Non Fungible Token Drop",permalink:"/docs/2.0/Tutorials/Basics/nft-drops"},next:{title:"Function Call Drop",permalink:"/docs/2.0/Tutorials/Basics/fc-drops"}},c={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating your Project",id:"creating-your-project",level:3},{value:"Breaking Down the Problem",id:"breaking-down-the-problem",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Creating Drop and Transferring FTs",id:"creating-drop-and-transferring-fts",level:2},{value:"Creating Linkdrops",id:"creating-linkdrops",level:2},{value:"Full Code",id:"full-code",level:2},{value:"Testing",id:"testing",level:2},{value:"Running the Script",id:"running-the-script",level:3},{value:"Claiming and Explorer Transactions",id:"claiming-and-explorer-transactions",level:3},{value:"Conclusion",id:"conclusion",level:2}],d={toc:u},m="wrapper";function h(e){let{components:t,...l}=e;return(0,r.kt)(m,(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fungible-token-drop"},"Fungible Token Drop"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"In this tutorial, you will learn how to create a fungible token drop from scratch. This allows you onboard users both with $NEAR and a set of FTs with the click of a link. An excellent use case can be seamlessly offering in-game currency to players."),(0,r.kt)("p",{align:"center"}," ",(0,r.kt)("img",{src:n(59464).default,alt:"ft claim",width:"80%"})," "),(0,r.kt)("p",null,"To learn more about the FT drop, see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Concepts/KeypomProtocol/GithubReadme/TypesOfDrops/ft-drops"},"concepts page")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"For the basic tutorials, you can choose to run the scripts on your own machine. To do so, you must have the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},"Node JS"),"  "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.near.org/tools/near-api-js/quick-reference#install"},"NEAR-API-JS"),"  "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/keypom/keypom-js#getting-started"},"Keypom JS SDK"))),(0,r.kt)("p",null,"With this tutorial, you can either create your own script by following along, or view the completed script available in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/keypom/keypom-docs-examples"},"Keypom Documentation Examples")," repo."),(0,r.kt)("h3",{id:"creating-your-project"},"Creating your Project"),(0,r.kt)("p",null,"In this section, you're going to create your project and install the SDK to prepare for the tutorial. If you have a completed script and have installed the SDK, you can skip ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/simple-drops#breaking-down-the-problem"},"forward"),"."),(0,r.kt)("p",null,"First, you need to give your project a home."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir my-keypom-project && cd my-keypom-project\n")),(0,r.kt)("p",null,"Next, you'll want to create a default ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file using the following command. You can accept all default values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm init\n")),(0,r.kt)("p",null,"At this point, your project structure should look like this. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"/my-keypom-project\n\u251c\u2500\u2500 package.json\n")),(0,r.kt)("p",null,"If you open ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", you should see this."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Default package.json"),(0,r.kt)("p",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "name": "my-keypom-project",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "author": "",\n  "license": "ISC"\n}\n')))),(0,r.kt)("p",null,"The next step is to create an empty JavaScript file."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"Mac/Lnx",label:"Mac OS/Linux",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch ft-keypom.js\n"))),(0,r.kt)(s.Z,{value:"WNDS",label:"Windows",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"fsutil file createnew ft-keypom.js 0\n")))),(0,r.kt)("p",null,"Finally, the last step is to install the Keypom JS SDK."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @keypom/core\n")),(0,r.kt)("p",null,"After installing the SDK, your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file should now look slightly different."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"package.json after installing the SDK"),(0,r.kt)("p",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "name": "my-keypom-project",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "author": "",\n  "license": "ISC",\n  # highlight-start\n  "dependencies": {\n    "@keypom/core": "^1.0.0"\n  }\n  # highlight-end\n}\n')))),(0,r.kt)("p",null,"With these steps complete, your project folder should look like this. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"/my-keypom-project\n\u251c\u2500\u2500 ft-keypom.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 node_modules\n\u2502   \u2514\u2500\u2500 @keypom/core\n\u2502   \u2514\u2500\u2500 ...\n")),(0,r.kt)("p",null,"You are now ready to begin creating your drop!"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"breaking-down-the-problem"},"Breaking Down the Problem"),(0,r.kt)("p",null,"The process of creating an FT drop can be broken down into the following steps.  "),(0,r.kt)("p",null,"1) Connect to the NEAR blockchain.",(0,r.kt)("br",{parentName:"p"}),"\n","2) Ensure the funder has enough FTs to fund the drop.",(0,r.kt)("br",{parentName:"p"}),"\n","3) Create the drop.",(0,r.kt)("br",{parentName:"p"}),"\n","4) Transfer  Keypom the necessary Fungible Tokens.",(0,r.kt)("br",{parentName:"p"}),"\n","5) Create linkdrops.   "),(0,r.kt)("p",null,"The following skeleton code can be used as a starting point:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Each of the two methods to create this drop will have their own unique set of imports\n\n// Imports used in the Keypom SDK method:\nconst { initKeypom, createDrop, getEnv, formatLinkdropUrl } = require("@keypom/core");\nconst { parseNearAmount } = require("@near-js/utils");\nconst { UnencryptedFileSystemKeyStore } = require("@near-js/keystores-node");\nconst { Near } = require("@near-js/wallet-account");\nconst { Account } = require("@near-js/accounts");\nconst { BN } = require("bn.js");\nconst path = require("path");\nconst homedir = require("os").homedir();\n\n// Imports used in the NEAR-API-JS method:\nconst { parseNearAmount } = require("@near-js/utils");\nconst { KeyPair } = require("@near-js/crypto")\nconst { Near } = require("@near-js/wallet-account");\nconst { Account } = require("@near-js/accounts");\nconst { UnencryptedFileSystemKeyStore } = require("@near-js/keystores-node");\nconst { getRecentDropId } = require("../utils/general.js")\nconst { BN } = require("bn.js");\nconst path = require("path");\nconst homedir = require("os").homedir();\n\n\nasync function FTDropKeypom(){\n// GETTING STARTED\n\n//      STEP 1 Initialize NEAR blockchain connection.\n\n//      STEP 2 Ensure the funder has enough FTs to fund the drop.\n\n// CREATING DROP AND TRANSFERRING FTs\n\n//      STEP 3 Create the drop.\n\n//      STEP 4 Transfer Keypom the necessary Fungible Tokens.\n\n// CREATING LINKDROPS\n\n//      STEP 5 Create Linkdrops\n}\n\nFTDropKeypom()\n')),(0,r.kt)("p",null,'Steps 1 and 2 will be covered in "',(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#getting-Started"},"Getting Started"),'" and Steps 3, 4, and 5 will be under "',(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#creating-drop-and-transferring-fts"},"Creating FT drop and Transferring FTs"),'". Step 6 will have its own section called "',(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#creating-linkdrops"},"Creating Linkrops"),'".'),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"In this section, you'll be addressing the first two steps: connecting to NEAR and ensuring the funder has enough FTs for the drop. "),(0,r.kt)("p",null,"Connecting to the NEAR blockchain will be done using ",(0,r.kt)("inlineCode",{parentName:"p"},"NEAR-API-JS")," and consists of the following steps: "),(0,r.kt)("p",null,"1) Create a Keystore, which stores your access keys used to sign transactions   "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"select a network, either ",(0,r.kt)("inlineCode",{parentName:"li"},"testnet")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"mainnet"),"  "),(0,r.kt)("li",{parentName:"ul"},"choose a location where the keypairs live, either a folder on your local machine, or in-memory      ")),(0,r.kt)("p",null,"2) Define a NEAR configuration using the Keystore",(0,r.kt)("br",{parentName:"p"}),"\n","3) Use the configuration to initialize a connection to NEAR  "),(0,r.kt)("p",null,"More information about this process can be found ",(0,r.kt)("a",{parentName:"p",href:"https://docs.near.org/tools/near-api-js/quick-reference#key-store"},"here"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For simplicity, this tutorial will choose a file-based keystore and point to the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.near-credentials")," folder on your local machine since this is where most of your keys are stored. For more information about KeyStores, visit NEAR's ",(0,r.kt)("a",{parentName:"p",href:"https://docs.near.org/tools/near-api-js/quick-reference#key-store"},"official docs"),".")),(0,r.kt)("p",null,"To ensure the funder has enough FTs to fund the drop, a new concept is to be defined."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"amountToTransfer")," = ",(0,r.kt)("em",{parentName:"p"},"FT per use")," * ",(0,r.kt)("em",{parentName:"p"},"number of keys")," * ",(0,r.kt)("em",{parentName:"p"},"uses per key"),".")),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"NEAR-API-JS"),", a ",(0,r.kt)("inlineCode",{parentName:"p"},"viewFunction")," to the FT contract can be made to call ",(0,r.kt)("inlineCode",{parentName:"p"},"ft_balance_of"),". This will return the funder's FT balance, which can be compared with ",(0,r.kt)("inlineCode",{parentName:"p"},"amountToTransfer")," to ensure the funder has enough FTs to fund the drop. "),(0,r.kt)("p",null,"The code for setting up the NEAR connection and ensuring sufficient funder FT balance is shown below. In the skeleton code, these are steps 1 and 2."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-example.js#L11-L45\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In the code, you may notice the balances defined using ",(0,r.kt)("inlineCode",{parentName:"p"},"BN"),". These are simply ",(0,r.kt)("em",{parentName:"p"},"Big Numbers")," and is a library built to handle numbers beyond JavaScript's ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER"},"max safe integer"),". "),(0,r.kt)("p",{parentName:"admonition"},"The FTs in this example have a ",(0,r.kt)("inlineCode",{parentName:"p"},"decimal")," of 24. This is the same as 1 $NEAR -> 10",(0,r.kt)("sup",null,"24")," YoctoNEAR, which allows the use of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.near.org/tools/near-api-js/utils"},(0,r.kt)("inlineCode",{parentName:"a"},"parseNearAmount"))," to convert between the two. Read more on the decimal parameter ",(0,r.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/3.x/erc20#a-note-on-decimals"},"here"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"creating-drop-and-transferring-fts"},"Creating Drop and Transferring FTs"),(0,r.kt)("p",null,"In this section of the tutorial, you'll be creating the drop and transferring the FTs to Keypom using the Keypom SDK. "),(0,r.kt)("p",null,"As outlined in to introduction, there are 2 tasks to complete in this section.  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create the drop  "),(0,r.kt)("li",{parentName:"ul"},"Transfer the FTs to Keypom  ")),(0,r.kt)("p",null,"This process starts with calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"initKeypom")," function and will always be the first function you call to interact with the SDK.  "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"initKeypom")," initializes the SDK to allow for interactions with the Keypom smart contracts. Without it, none of the other SDK functions would work as expected. If a NEAR connection is not already present, it will initialize a new one for you. More info on the ",(0,r.kt)("inlineCode",{parentName:"p"},"initKeypom")," function can be found ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/keypom-sdk/Core/modules#initkeypom"},"here"),"."),(0,r.kt)("p",null,"Following the ",(0,r.kt)("inlineCode",{parentName:"p"},"initKeypom")," call, the FT Drop is created. This is done by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"createDrop")," and adding an ",(0,r.kt)("inlineCode",{parentName:"p"},"ftData")," parameter. "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Recall that the private keys being generated using ",(0,r.kt)("inlineCode",{parentName:"p"},"createDrop")," are used to store the assets. These keys are then embedded within a link."),(0,r.kt)("p",{parentName:"admonition"},"In an FT Drop, the assets consist of FTs and optional $NEAR.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ftData")," is an object with the following properties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ftData\n\u251c\u2500\u2500 contractId\n\u251c\u2500\u2500 senderId\n\u251c\u2500\u2500 amount\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contractId"),": The FT contract ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"senderId"),": The account from which the FTs will be sent to Keypom."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"amount"),": This is the human readable amount of FT, based on the ",(0,r.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/3.x/erc20#a-note-on-decimals"},"decimals value")," of the token")),(0,r.kt)("p",null,"Including the ",(0,r.kt)("inlineCode",{parentName:"p"},"ftData")," parameter categorizes this as an FT drop. Without it, the Keypom Protocol would treat this drop as a Simple Drop."),(0,r.kt)("p",null,"More information on the ",(0,r.kt)("inlineCode",{parentName:"p"},"ftData")," parameter can be found ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/keypom-sdk/Core/interfaces/FTData"},"here"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"So long as the funder has an adequate FT balance, all you need to do is call ",(0,r.kt)("inlineCode",{parentName:"p"},"createDrop")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"ftData")," to create the drop."),(0,r.kt)("p",{parentName:"admonition"},"The SDK will ",(0,r.kt)("strong",{parentName:"p"},"automatically")," register Keypom on the FT contract and transfer the FTs to Keypom for you. ")),(0,r.kt)("p",null,"To see what the SDK is doing behind the scenes, a ",(0,r.kt)("inlineCode",{parentName:"p"},"NEAR-API-JS")," equivalent NodeJS script has been provided."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"KPJS",label:"\ud83d\udd11 Keypom SDK",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-example.js#L47-L70\n"))),(0,r.kt)(s.Z,{value:"NRJS",label:"\ud83d\udcbb NEAR-API-JS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-near-example.js#L50-L115\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"creating-linkdrops"},"Creating Linkdrops"),(0,r.kt)("p",null,"The last step in this process is to create the links themselves so that you can easily distribute the assets to people. This is done by embedding the private key, containing the $NEAR, into the link along with the Keypom contract ID.  "),(0,r.kt)("p",null,"With the Keypom SDK, this is all neatly wrapped up in the function ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/keypom-sdk/Core/modules#formatlinkdropurl"},(0,r.kt)("inlineCode",{parentName:"a"},"formatLinkdropUrl")),". You just need to provide the base URL format and the private key you wish to embed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-example.js#L72-L78\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"full-code"},"Full Code"),(0,r.kt)("p",null,"Now that everything has been put together, the final code can be seen below."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"KPJS",label:"\ud83d\udd11 Keypom SDK",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-example.js#L1-L86\n"))),(0,r.kt)(s.Z,{value:"NRJS",label:"\ud83d\udcbb NEAR-API-JS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/keypom/keypom-docs-examples/blob/8202f0ef88205bfca644ccf5d4d3cfb460f88f15/basic-tutorials/fungible-token-drop/ft-near-example.js#L1-L127\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("h3",{id:"running-the-script"},"Running the Script"),(0,r.kt)("p",null,"Here, you'll learn how to run the code that was just covered, and what to expect."),(0,r.kt)("p",null,"To view the completed code, clone the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/keypom/keypom-docs-examples"},"Keypom Docs Examples")," repository and navigate to the ",(0,r.kt)("inlineCode",{parentName:"p"},"basic-tutorials/ft-drop"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/keypom/keypom-docs-examples.git && cd keypom-docs-examples/basic-tutorials/ft-drop\n")),(0,r.kt)("p",null,"From there, you can and open the ",(0,r.kt)("inlineCode",{parentName:"p"},"ft-example.js")," file."),(0,r.kt)("p",null,"To run the code you just cloned, return to the ",(0,r.kt)("inlineCode",{parentName:"p"},"keypom-docs-examples")," directory and install all the necessary packages. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd .. && cd .. && yarn\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Prior to running these scripts, ensure you replace all instances of ",(0,r.kt)("inlineCode",{parentName:"p"},"keypom-docs-demo.testnet")," in the script with the credentials of your account found in your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.near-credentials")," folder")),(0,r.kt)("p",null,"From there, you can run this FT Drop script that was made in this tutorial using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn basic:ft:keypom\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The SDK script is being tested here; use ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn basic:ft:naj")," to test the ",(0,r.kt)("inlineCode",{parentName:"p"},"NEAR-API-JS")," script instead.")),(0,r.kt)("p",null,"This should return a successful drop creation and console log a Public Key and Linkdrop"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Public Keys:  [ 'ed25519:DkvGVA8UuBRKtsXvBxnKkHs2aHzd221QSquinokfJ71a' ]\nLinkdrops:  [\n  'https://testnet.mynearwallet.com/linkdrop/v2.keypom.testnet/2H8i9Snk4v3wBBHeTxBFuzzi1SF5DL4nFHvMUp1nDz4ARSW3tB5b8z2Xxm6Y5rMzzVS3sDppPxM4jtRhyYkHfF2Y'\n]\nKeypom Contract Explorer Link: explorer.testnet.near.org/accounts/v2.keypom.testnet.com\n")),(0,r.kt)("p",null,"To see the full console log from this drop creation, see the expandable section below."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Console Log of Test"),(0,r.kt)("p",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Receipts: AxiAwWNkKQsyvdcAhwBr2B2Qqc5gVCBw2MLrbL7dLq6d, 6QCHm8YtpfreHYQvw9VAHU7rJXGgfVv4T1TDcuXHEtvC, 5CTcWfQ1BC1nensRK6NhcNSv5NjxdSaVSwti4j34fCa3\n        Log [v2.keypom.testnet]: Current Block Timestamp: 1682352345716601116\n        Log [v2.keypom.testnet]: 21 calls with 105000000000000 attached GAS. Pow outcome: 1.8602935. Required Allowance: 20248156910387200000000\n        Log [v2.keypom.testnet]: was_ft_registered: true\n        Log [v2.keypom.testnet]: Total required storage Yocto 11980000000000000000000\n        Log [v2.keypom.testnet]: Current balance: 8.2955772, \n            Required Deposit: 1.0332281, \n            total_required_storage: 0.01198,\n            Drop Fee: 0, \n            Key Fee: 0 Total Key Fee: 0,\n            allowance: 0.0202481 total allowance: 0.0202481,\n            access key storage: 0.001 total access key storage: 0.001,\n            deposits less none FCs: 1 total deposits: 1 lazy registration: false,\n            deposits for FCs: 0 total deposits for FCs: 0,\n            uses per key: 1\n            None FCs: 0,\n            length: 1\n            GAS to attach: 100000000000000\n        Log [v2.keypom.testnet]: New user balance 7.262349\n        Log [v2.keypom.testnet]: Fees collected 0\n        Log [v2.keypom.testnet]: Performing CCC to get storage from FT contract\nReceipts: 4PPt4W1C9xYP2yc67CLVX6vvYshf1oCoDr9hBiZUniTZ, 8iSu5McdW8rvPApvYjbPhew6wGZ9raAPiR8SEA43tV86\n        Log [v2.keypom.testnet]: User has enough balance to cover FT storage. Subtracting 0.0025 from user balance. User balance is now 7.259849\n        Log [v2.keypom.testnet]: 21 calls with 105000000000000 attached GAS. Pow outcome: 1.8602935. Required Allowance: 20248156910387200000000\n        Log [v2.keypom.testnet]: FT contract already registered. Refunding user balance for 0.00125. Balance is now 7.261099\nReceipts: 9FEiXh19PMMRirF4CGDTEfopWxf6eLWxNvJmUMnrrVX8, AwJ362Sj4PZ3EbusnwLo4qoyExXRRZPAyqUUT1uZ64oi, 8KquU3a2BA3AWb9keYfwYvYpD6iD5CQG1Vn78efBex9B\n        Log [ft.keypom.testnet]: EVENT_JSON:{"standard":"nep141","version":"1.0.0","event":"ft_transfer","data":[{"old_owner_id":"keypom-docs-demo.testnet","new_owner_id":"v2.keypom.testnet","amount":"1"}]}\nReceipt: 9Ls4K4vm8pW7HcjD6PMBbJoWSsjwN16YEq3GdCqnahPx\n        Log [ft.keypom.testnet]: New uses registered 1\nPublic Keys:  [ \'ed25519:DkvGVA8UuBRKtsXvBxnKkHs2aHzd221QSquinokfJ71a\' ]\nLinkdrops:  [\n  \'https://testnet.mynearwallet.com/linkdrop/v2.keypom.testnet/2H8i9Snk4v3wBBHeTxBFuzzi1SF5DL4nFHvMUp1nDz4ARSW3tB5b8z2Xxm6Y5rMzzVS3sDppPxM4jtRhyYkHfF2Y\'\n]\nKeypom Contract Explorer Link: explorer.testnet.near.org/accounts/v2.keypom.testnet.com\n')))),(0,r.kt)("h3",{id:"claiming-and-explorer-transactions"},"Claiming and Explorer Transactions"),(0,r.kt)("p",null,"Once you click the link, it will take you to the following NEAR Wallet page, where you will have the choice to claim with an existing account or create a new one. "),(0,r.kt)("p",{align:"center"}," ",(0,r.kt)("img",{src:n(92004).default,alt:"NEAR Wallet claim",width:"80%"})," "),(0,r.kt)("p",null,"In your NEAR wallet, you should now be able to see the FT tokens that were transferred to you. "),(0,r.kt)("p",{align:"center"}," ",(0,r.kt)("img",{src:n(59464).default,alt:"ft claim",width:"80%"})," "),(0,r.kt)("p",null,"To check the transactions, click the final link in the console log when you run the script."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Keypom Contract Explorer Link: https://explorer.testnet.near.org/accounts/v2.keypom.testnet \n")),(0,r.kt)("p",null,"From there, you should be able to see the ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.testnet.near.org/transactions/6HkwpwWVA7m1tAGj75JGpF975toStWRF1y8FSRDMPPfT"},(0,r.kt)("inlineCode",{parentName:"a"},"create_drop")),", ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.testnet.near.org/transactions/47HmGKAHx4TDp6vNbnBAb9ifS1gTXrC58o7svFmZDYzk"},(0,r.kt)("inlineCode",{parentName:"a"},"ft_transfer_call"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.testnet.near.org/transactions/62gQiyQjx9z9WJsVQNaaa4fje9PeeTpCuHun2PZ8WjNm"},(0,r.kt)("inlineCode",{parentName:"a"},"claim"))," transactions. "),(0,r.kt)("p",{align:"center"}," ",(0,r.kt)("img",{src:n(63747).default,alt:"explorer transactions",width:"80%"})," "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Recall that ",(0,r.kt)("inlineCode",{parentName:"p"},"ft_transfer_call")," is never explicitly called but rather ",(0,r.kt)("inlineCode",{parentName:"p"},"createDrop")," calls it for you; this can be seen in the explorer shown above. "),(0,r.kt)("p",{parentName:"admonition"},"This is the SDK in action!")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this tutorial, you've learned to ensure the funder has a ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#getting-started"},"sufficient FT balance")," for the drop, ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#creating-drop-and-transferring-fts"},"create an FT drop")," with the SDK, and to ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0/Tutorials/Basics/ft-drops#creating-drop-and-transferring-fts"},"transfer FTs")," to Keypom. Once the drop was created, you constructed a valid linkdrop using the private keys in order to claim the assets."),(0,r.kt)("p",null,"In the next tutorial, you will learn to create a function call drop."))}h.isMDXComponent=!0},63747:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const a=n.p+"assets/images/explorer-8396d8678609cfaca701adfa467cb235.png"},59464:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const a=n.p+"assets/images/ft-9922a1fcebd82883d6a5d7110c9ac415.png"},92004:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const a=n.p+"assets/images/nw-claim-a82cb60c920cc240e42c67def5faaa82.png"}}]);