"use strict";(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[3076],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},95087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={id:"welcome",title:"@keypom/core - v1.0.2",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},i=void 0,l={unversionedId:"keypom-sdk/Core/welcome",id:"keypom-sdk/Core/welcome",title:"@keypom/core - v1.0.2",description:"Keypom Core SDK",source:"@site/docs/keypom-sdk/Core/welcome.md",sourceDirName:"keypom-sdk/Core",slug:"/keypom-sdk/Core/welcome",permalink:"/docs/keypom-sdk/Core/welcome",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"welcome",title:"@keypom/core - v1.0.2",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"TypeDocSDK",next:{title:"Exports",permalink:"/docs/keypom-sdk/Core/modules"}},s={},p=[{value:"View Methods &amp; Utility Functions Only",id:"view-methods--utility-functions-only",level:2},{value:"Funder Object",id:"funder-object",level:2},{value:"Customized KeyStore &amp; Multiple Signers",id:"customized-keystore--multiple-signers",level:2},{value:"Per Drop",id:"per-drop",level:2},{value:"Per Key",id:"per-key",level:2},{value:"Key Costs for Simple Drop",id:"key-costs-for-simple-drop",level:3},{value:"Additional Costs for NFT Drops",id:"additional-costs-for-nft-drops",level:3},{value:"Additional Costs for FT Drops",id:"additional-costs-for-ft-drops",level:3},{value:"Additional Costs for FC Drops",id:"additional-costs-for-fc-drops",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",{align:"center"},(0,o.kt)("a",{href:"https://docs.keypom.xyz/"},(0,o.kt)("picture",null,(0,o.kt)("img",{src:"https://cloudflare-ipfs.com/ipfs/bafybeightypuoqly32gsrivh4efckhdv6wsefiynpnonlem6ts3ypgdm7e",height:"128"})),(0,o.kt)("h1",{align:"center"},"Keypom Core SDK"))),(0,o.kt)("p",{align:"center"},(0,o.kt)("a",{"aria-label":"Made by Ben Kurrek",href:"https://github.com/BenKurrek"},(0,o.kt)("img",{src:"https://img.shields.io/badge/MADE%20BY-Ben%20Kurrek-000000.svg?style=for-the-badge"})),(0,o.kt)("a",{"aria-label":"Made by Matt Lockyer",href:"https://github.com/mattlockyer"},(0,o.kt)("img",{src:"https://img.shields.io/badge/MADE%20BY-Matt%20Lockyer-000000.svg?style=for-the-badge"})),(0,o.kt)("a",{"aria-label":"License",href:"https://github.com/keypom/keypom-js/blob/main/LICENSE"},(0,o.kt)("img",{alt:"",src:"https://img.shields.io/badge/License-GNU%20GPL-green?style=for-the-badge"})),(0,o.kt)("a",{"aria-label":"Join the community",href:"https://t.me/+OqI-cKxQU05lZDIx"},(0,o.kt)("img",{alt:"",src:"https://img.shields.io/badge/Join%20The-community-blueviolet.svg?style=for-the-badge"}))),(0,o.kt)("p",null,"The core package serves as a way to interact with Keypom through a set of easy to use methods that abstract away the complexities of the protocol. The package includes ways to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create drops of all kinds"),(0,o.kt)("li",{parentName:"ul"},"Claim drops"),(0,o.kt)("li",{parentName:"ul"},"Create and use trial accounts"),(0,o.kt)("li",{parentName:"ul"},"View information about drops and keys"),(0,o.kt)("li",{parentName:"ul"},"Delete drops and refund assets"),(0,o.kt)("li",{parentName:"ul"},"Manage user balances")),(0,o.kt)("h1",{id:"table-of-contents"},"Table of Contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#getting-started"},"Getting Started"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#view-methods--utility-functions-only"},"View Methods \\& Utility Functions Only")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#funder-object"},"Funder Object")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#customized-keystore--multiple-signers"},"Customized KeyStore \\& Multiple Signers")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#costs"},"Costs"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#per-drop"},"Per Drop")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#per-key"},"Per Key"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#key-costs-for-simple-drop"},"Key Costs for Simple Drop")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#additional-costs-for-nft-drops"},"Additional Costs for NFT Drops")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#additional-costs-for-ft-drops"},"Additional Costs for FT Drops")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#additional-costs-for-fc-drops"},"Additional Costs for FC Drops")))))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#contributing"},"Contributing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#license"},"License"))),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"installation"},"Installation"),(0,o.kt)("p",null,"To install the Keypom Core SDK, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @keypom/core\n# or\nyarn add @keypom/core\n# or\npnpm add @keypom/core\n")),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"The first thing you must ",(0,o.kt)("em",{parentName:"p"},"always")," do when using the SDK is to call ",(0,o.kt)("inlineCode",{parentName:"p"},"initKeypom"),". This will initialize the package state and establish a connection to the NEAR blockchain. "),(0,o.kt)("p",null,"By default, the SDK will create a new ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/near-api-js/blob/master/packages/keystores/src/in_memory_key_store.ts"},"InMemoryKeyStore")," to sign transactions with. Thus, if you don't pass in a ",(0,o.kt)("inlineCode",{parentName:"p"},"funder")," object, you won't be able to sign transactions and can only invoke utility and view methods. Alternatively, if you'd like to use a different keystore, you can pass in a customized ",(0,o.kt)("inlineCode",{parentName:"p"},"near")," object to the initialization function."),(0,o.kt)("p",null,"With the SDK, every function that requires transactions to be signed can be carried through in 1 of two ways:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Passing in an ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-api-js/blob/master/packages/accounts/src/account.ts"},"Account")," object into the function whose keys are kept in the SDK's keystore."),(0,o.kt)("li",{parentName:"ol"},"Passing in a ",(0,o.kt)("inlineCode",{parentName:"li"},"funder")," object once during initialization whose keys will be kept in the SDK's ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-api-js/blob/master/packages/keystores/src/in_memory_key_store.ts"},"InMemoryKeyStore"),".")),(0,o.kt)("h2",{id:"view-methods--utility-functions-only"},"View Methods & Utility Functions Only"),(0,o.kt)("p",null,"If your only purpose is to query information from the chain or use Keypom's utility functions such as ",(0,o.kt)("inlineCode",{parentName:"p"},"generateKeys"),", you don't need to pass in a ",(0,o.kt)("inlineCode",{parentName:"p"},"near")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"funder")," object to ",(0,o.kt)("inlineCode",{parentName:"p"},"initKeypom"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await initKeypom({\n    network: \"testnet\"\n});\n\nconst keys = await generateKeys({\n    numKeys: 1\n})\nconsole.log('keys: ', keys)\n\nconst dropSupply = await getKeyTotalSupply();\nconsole.log('dropSupply: ', dropSupply)\n")),(0,o.kt)("h2",{id:"funder-object"},"Funder Object"),(0,o.kt)("p",null,"If you have the private key of an account that you'd like to use to sign transactions with, you can pass in a ",(0,o.kt)("inlineCode",{parentName:"p"},"funder")," object to ",(0,o.kt)("inlineCode",{parentName:"p"},"initKeypom"),". The private key can either be hardcoded or passed in through environment variables / secrets."),(0,o.kt)("p",null,"Using this method, you only need to pass the funder object once on initialization and can freely invoke any of the SDK methods moving forward. To update the funder object, you can call ",(0,o.kt)("inlineCode",{parentName:"p"},"updateFunder")," and pass in different information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'await initKeypom({\n    network: "testnet",\n    funder: {\n        accountId: "benji_demo.testnet",\n        secretKey: "ed25519:5yARProkcALbxaSQ66aYZMSBPWL9uPBmkoQGjV3oi2ddQDMh1teMAbz7jqNV9oVyMy7kZNREjYvWPqjcA6LW9Jb1"\n    }\n});\n\nconst dropSupply = await getKeyTotalSupply();\nconsole.log(\'dropSupply: \', dropSupply)\n\nconst {keys} = await createDrop({\n    numKeys: 1,\n    depositPerUseNEAR: 1\n})\nconsole.log(\'keys: \', keys)\n')),(0,o.kt)("h2",{id:"customized-keystore--multiple-signers"},"Customized KeyStore & Multiple Signers"),(0,o.kt)("p",null,"Passing in a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"near")," object when initializing Keypom has several benefits as seen below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you have multiple accounts that will be signing transactions and don't want to keep calling ",(0,o.kt)("inlineCode",{parentName:"li"},"updateFunder"),"."),(0,o.kt)("li",{parentName:"ul"},"You don't want to hardcode the private key in the ",(0,o.kt)("inlineCode",{parentName:"li"},"funder")," object."),(0,o.kt)("li",{parentName:"ul"},"You have a keystore containing keys that will be used to sign transactions already in scope.")),(0,o.kt)("p",null,"In this case, you can pass in an existing ",(0,o.kt)("inlineCode",{parentName:"p"},"near")," object and then pass in ",(0,o.kt)("inlineCode",{parentName:"p"},"Account")," objects when calling the SDK methods."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let keyStore = new UnencryptedFileSystemKeyStore(credentialsPath);  \nlet nearConfig = {\n    networkId: NETWORK_ID,\n    keyStore: keyStore,\n    nodeUrl: `https://rpc.${NETWORK_ID}.near.org`,\n    walletUrl: `https://wallet.${NETWORK_ID}.near.org`,\n    helperUrl: `https://helper.${NETWORK_ID}.near.org`,\n    explorerUrl: `https://explorer.${NETWORK_ID}.near.org`,\n};  \nlet near = new Near(nearConfig);\n\nawait initKeypom({\n    near\n});\n\nconst dropSupply = await getKeyTotalSupply();\nconsole.log('dropSupply: ', dropSupply)\n\nconst fundingAccount = new Account(near.connection, funderAccountId);\nconst {keys} = await createDrop({\n    account: fundingAccount,\n    numKeys: 1,\n    depositPerUseNEAR: 1\n})\nconsole.log('keys: ', keys)\n")),(0,o.kt)("h1",{id:"costs"},"Costs"),(0,o.kt)("p",null,"It is important to note that the Keypom contracts are 100% ",(0,o.kt)("strong",{parentName:"p"},"FEE FREE")," and will remain that way for the ",(0,o.kt)("em",{parentName:"p"},"foreseeable future"),". These contracts are a public good and are meant to inspire change in the NEAR ecosystem."),(0,o.kt)("p",null,"With that being said, there are several mandatory costs that must be taken into account when using Keypom. These costs are broken down into two categories: per key and per drop."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"NOTE:")," Creating an empty drop and then adding 100 keys in separate calls will incur the same cost as creating a drop with 100 keys in the same call.")),(0,o.kt)("h2",{id:"per-drop"},"Per Drop"),(0,o.kt)("p",null,"When creating an empty drop, there is only one cost to keep in mind regardless of the drop type:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Storage cost (",(0,o.kt)("strong",{parentName:"li"},"~0.006 $NEAR")," for simple drops)")),(0,o.kt)("h2",{id:"per-key"},"Per Key"),(0,o.kt)("p",null,"Whenever keys are added to a drop (either when the drop is first created or at a later date), the costs are outlined below."),(0,o.kt)("h3",{id:"key-costs-for-simple-drop"},"Key Costs for Simple Drop"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"$NEAR sent whenever the key is used (can be 0)."),(0,o.kt)("li",{parentName:"ul"},"Access key allowance (",(0,o.kt)("strong",{parentName:"li"},"~0.0187 $NEAR per use"),")."),(0,o.kt)("li",{parentName:"ul"},"Storage for creating access key (",(0,o.kt)("strong",{parentName:"li"},"0.001 $NEAR"),")."),(0,o.kt)("li",{parentName:"ul"},"Storage cost (",(0,o.kt)("strong",{parentName:"li"},"~0.006 $NEAR")," for simple drops)")),(0,o.kt)("h3",{id:"additional-costs-for-nft-drops"},"Additional Costs for NFT Drops"),(0,o.kt)("p",null,"Since keys aren't registered for use until ",(0,o.kt)("strong",{parentName:"p"},"after")," the contract has received the NFT, we don't know how much storage the token IDs will use on the contract. To combat this, the Keypom contract will automatically measure the storage used up for storing each token ID in the ",(0,o.kt)("inlineCode",{parentName:"p"},"nft_on_transfer")," function and that $NEAR will be taken from the funder's balance."),(0,o.kt)("h3",{id:"additional-costs-for-ft-drops"},"Additional Costs for FT Drops"),(0,o.kt)("p",null,"Since accounts claiming FTs may or may not be registered on the Fungible Token contract, Keypom will automatically try to register ",(0,o.kt)("strong",{parentName:"p"},"all")," accounts. This means that the drop creators must front the cost of registering users depending on the ",(0,o.kt)("inlineCode",{parentName:"p"},"storage_balance_bounds")," returned from the FT contract. This applies to every use for every key."),(0,o.kt)("p",null,"In addition, Keypom must be registered on the FT contract. If you create a FT drop and are the first person to ever do so for a specific FT contract on Keypom, Keypom will be automatically registered when the drop is created. This is a one time cost and once it is done, no other account will need to register Keypom for that specific FT contract."),(0,o.kt)("h3",{id:"additional-costs-for-fc-drops"},"Additional Costs for FC Drops"),(0,o.kt)("p",null,"Drop creators have a ton of customization available to them when creation Function Call drops. A cost that they might incur is the attached deposit being sent alongside the function call. Keypom will charge creators for all the attached deposits they specify."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"NOTE:")," The storage costs are dynamically calculated and will vary depending on the information you store on-chain.")),(0,o.kt)("h1",{id:"contributing"},"Contributing"),(0,o.kt)("p",null,"First off, thanks for taking the time to contribute! Contributions are what makes the open-source community such an amazing place to learn, inspire, and create. Any contributions you make will benefit everybody else and are ",(0,o.kt)("strong",{parentName:"p"},"greatly appreciated"),"."),(0,o.kt)("p",null,"Please try to create bug reports that are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Reproducible.")," Include steps to reproduce the problem."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Specific.")," Include as much detail as possible: which version, what environment, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Unique.")," Do not duplicate existing opened issues."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Scoped to a Single Bug.")," One bug per report.")),(0,o.kt)("p",null,"You can use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/igorshubovych/markdownlint-cli"},"markdownlint-cli")," to check for common markdown style inconsistency."),(0,o.kt)("h1",{id:"license"},"License"),(0,o.kt)("p",null,"This project is licensed under the ",(0,o.kt)("strong",{parentName:"p"},"GPL License"),"."))}d.isMDXComponent=!0}}]);