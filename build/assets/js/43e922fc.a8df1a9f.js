"use strict";(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[1971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||s;return n?o.createElement(d,i(i({ref:t},c),{},{components:n})):o.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:r,i[1]=a;for(var p=2;p<s;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5567:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const s={sidebar_label:"Keypom Tests",sidebar_position:8},i="Running the Keypom Tests",a={unversionedId:"Concepts/KeypomProtocol/GithubReadme/testing",id:"version-2.0/Concepts/KeypomProtocol/GithubReadme/testing",title:"Running the Keypom Tests",description:"We have put together a suite of test cases that can be found in the tests folder. These range anywhere from simple config tests all the way to full blown ticketing and POAPs.",source:"@site/versioned_docs/version-2.0/Concepts/KeypomProtocol/GithubReadme/testing.md",sourceDirName:"Concepts/KeypomProtocol/GithubReadme",slug:"/Concepts/KeypomProtocol/GithubReadme/testing",permalink:"/docs/2.0/Concepts/KeypomProtocol/GithubReadme/testing",draft:!1,editUrl:"https://github.com/keypom/keypom-docs/tree/main/versioned_docs/version-2.0/Concepts/KeypomProtocol/GithubReadme/testing.md",tags:[],version:"2.0",sidebarPosition:8,frontMatter:{sidebar_label:"Keypom Tests",sidebar_position:8},sidebar:"Concepts",previous:{title:"Querying Information from Keypom",permalink:"/docs/2.0/Concepts/KeypomProtocol/GithubReadme/querying"},next:{title:"Contributing",permalink:"/docs/2.0/Concepts/KeypomProtocol/GithubReadme/contribute"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"running-the-keypom-tests"},"Running the Keypom Tests"),(0,r.kt)("p",null,"We have put together a suite of test cases that can be found in the ",(0,r.kt)("inlineCode",{parentName:"p"},"__tests__")," folder. These range anywhere from simple config tests all the way to full blown ticketing and POAPs."),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"__tests__")," folder, there are sub-folders with each type of test. Some of these sub-folders contain a ",(0,r.kt)("inlineCode",{parentName:"p"},"utils")," folder with some utility functions used."),(0,r.kt)("p",null,"All the tests use ",(0,r.kt)("inlineCode",{parentName:"p"},"workspaces-js"),". In order to run all the tests, run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn && yarn test\n")),(0,r.kt)("p",null,"This will run through each test 1 by 1. If you wish to only run a set of specific tests, the full list of commands can be found below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'"test:internals"\n"test:stage1"\n"test:stage1:simple"\n"test:ticketing"\n"test:poaps"\n"test:configs"\n"test:nft-drops"\n"test:ft-drops"\n"test:profiling"\n"test:passwords"\n')))}m.isMDXComponent=!0}}]);